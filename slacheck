#!/bin/sh

# trace détaillée
# set -x

# Checks all relevant attributes of SLA depending of a config profile
# 

# ====================================================================
# config to edit to fit project

# configs relating SLA file attributes
RGBprof=sRGB		# RGB color profile
CMYKprof='ISO Coated v2 300% (ECI)'		# CMYK color profile
resolution=300		# resolution pour attributs PicRes ET Resolution (de <PDF...>)
RecalcPic=1			# limite vraiment les images à la résolution max
Compress=1 			# compresser vectoriel
CMethod=1 			# compresser images avec perte
Quality=1 			# 1 : haute qualité (mais pas maximale)
EmbedPDF=1			# 1 : embed pdf ("expérimental")
PDFversion=15		# PDF output version

useDocBleeds=0 
BTop='14.1732283464567'
BLeft=0 
BRight='14.1732283464567'
BBottom='14.1732283464567'

cropMarks=1 
markLength='8.50393700787402'
markOffset='8.50393700787402'

bleedMarks=0 
registrationMarks=0 
colorMarks=0 
docInfoMarks=0 

# All pages should be :
pagewidth="420.944881889764"
pageheight="595.275590551181"

# configs for default features
pdf="check" 		# check pdf exists and is recent ; set to "dontcheck" to not check
img="check"			# check that used images are in images subfolder

# end of config
# =====================================================================

actionoption='' 	# default : dont change SLAs
verboseoption=''	# default : not verbose

while [ "$stopoptions" = "" ] 
do
	stopoptions=true
	
	if  [ "$1" = '-?' ]
	then
		echo "slacheck checks workflow validity of a scribus file"
		echo "Options :"
		echo "-? : get this help"
		echo "-v : verbose output"
		echo "-notpdf : dont compare PDF and SLA last edit dates"
		echo "-notimg : dont check for correct included image files"
		echo "-set : change the SLA so it conforms to project standards (save in .bak)"
		echo
		stopoptions=''
	fi

	if [ "$1" = "-v" ]
	then
		shift
		verboseoption='-v'
		stopoptions=''
	fi

	if [ "$1" = "-notpdf" ]
	then
		shift
		pdf='dontcheck'
		stopoptions=''
	fi

	if [ "$1" = "-notimg" ]
	then
		shift
		img='dontcheck'
		stopoptions=''
	fi
	
	if [ "$1" = "-set" ]
	then
		shift
		actionoption='-set'
		echo "Attention, le fichier $1.sla sera modifié."
		stopoptions=''
	fi
done

[ ! -f "$1.sla" ] && echo Error : missing $1.sla file && exit

# -H : affiche le nom de fichier
# -o : n'affiche que la partie matchant le pattern et non toute la ligne
# -i : case insensitif
grep -H -o -i "\"[^\"]*aaa[^\"]*\"" "$1.sla"
grep -H -o -i "\"[^\"]*ppp[^\"]*\"" "$1.sla"
grep -H -o -i "\"[^\"]*xxx[^\"]*\"" "$1.sla"

alloptions="$verboseoption $actionoption"

# As for color profiles, the correct values to be checked are :
# <DOCUMENT ... DPMo="sRGB" DPPr="ISO Coated v2 300% (ECI)" DPIn="sRGB" DPInCMYK="ISO Coated v2 300% (ECI)" DPIn2="sRGB" DPIn3="ISO Coated v2 300% (ECI)" ...>
# <PDF ... SolidP="sRGB" ImageP="sRGB" PrintP="ISO Coated v2 300% (ECI)"  ...>

slacheckattr $alloptions "$1" DOCUMENT 	DPIn 		"$RGBprof" 		"RGB color profile"
slacheckattr $alloptions "$1" DOCUMENT 	DPIn2		"$RGBprof"		"RGB color profile"

slacheckattr $alloptions "$1" DOCUMENT 	DPPr 		"$CMYKprof"		"CMYK color profile"
slacheckattr $alloptions "$1" DOCUMENT 	DPInCMYK	"$CMYKprof"		"CMYK color profile"
slacheckattr $alloptions "$1" DOCUMENT 	DPIn3		"$CMYKprof"		"CMYK color profile"

slacheckattr $alloptions "$1" PDF		SolidP 		"$RGBprof"		"RGBcolor profile"
slacheckattr $alloptions "$1" PDF		ImageP 		"$RGBprof"		"RGB color profile"

slacheckattr $alloptions "$1" PDF		PrintP		"$CMYKprof"		"CMYK color profile"

# other PDF output checks

slacheckattr $alloptions "$1" PDF		PicRes		"$resolution"	"Résolution des images"
slacheckattr $alloptions "$1" PDF		Resolution	"$resolution"	"Résolution des EPS"
slacheckattr $alloptions "$1" PDF		Compress	"$Compress"		"Compression des images"
slacheckattr $alloptions "$1" PDF		RecalcPic	"$RecalcPic"	"Limiter la résolution des images"
slacheckattr $alloptions "$1" PDF		CMethod		"$CMethod"		"Méthode de compression des images"
slacheckattr $alloptions "$1" PDF		Quality		"$Quality"		"Qualité de la compression des images"
slacheckattr $alloptions "$1" PDF		EmbedPDF	"$EmbedPDF"		"Embed PDFs"
slacheckattr $alloptions "$1" PDF		Version		"$PDFversion"	"Version PDF - eg 15 for 1.5"

slacheckattr $alloptions "$1" PDF	useDocBleeds 	"$useDocBleeds"	"Utiliser le fond perdu du document"
slacheckattr $alloptions "$1" PDF		BTop		"$BTop"			"Fond perdu en haut"
slacheckattr $alloptions "$1" PDF		BLeft		"$BLeft"		"Fond perdu intérieur (mais indiqué Left ?)"
slacheckattr $alloptions "$1" PDF		BRight		"$BRight"		"Fond perdu extérieur (mais indiqué Right ?)"
slacheckattr $alloptions "$1" PDF		BBottom		"$BBottom"		"Fond perdu en bas"

slacheckattr $alloptions "$1" PDF		cropMarks	"$cropMarks"	"Traits de coupe"
slacheckattr $alloptions "$1" PDF		markLength	"$markLength"	"Longueur des traits de coupe"
slacheckattr $alloptions "$1" PDF		markOffset	"$markOffset"	"Décalage des traits de coupe"

slacheckattr $alloptions "$1" PDF		bleedMarks	"$bleedMarks"	"Traits de fond perdu"
slacheckattr $alloptions "$1" PDF	registrationMarks	"$registrationMarks"	"registrationMarks"
slacheckattr $alloptions "$1" PDF	colorMarks		"$colorMarks"	"colorMarks"

# Check Pages attributes

slacheckattr $alloptions -all "$1" PAGE 	PAGEWIDTH	"$pagewidth"	"Largeur de page A5=420.944881889764"
slacheckattr $alloptions -all "$1" PAGE 	PAGEHEIGHT	"$pageheight"	"Hauteur de page A5=595.275590551181"

if [ "$actionoption" = "-set" ]
then
	exit;
# else
#	echo "Attributes have been checked. In case there are mistakes you can fix them using -set option"
fi

if [ "$pdf" = "check" ]
then
	# on vérifie qu'il y a un PDF et qu'il a été généré APRÈS l'édition du SLA
	# stat -c %y n54.pdf : date de modif de n54.pdf
	
	if [ ! -f "$1.pdf" ]
	then
		echo Missing $1.pdf
	elif [ "$1.sla" -nt "$1.pdf" ]
	then
		datesla=`stat -c %y "$1.sla"`
		datepdf=`stat -c %y "$1.pdf"`
		echo "Warning : $1.sla has been edited and saved later than last PDF output : $1.sla = ${datesla%:*} ; $1.pdf = ${datepdf%:*}"
	fi
fi

if [ "$img" = "check" ]
then
	slacheckimages "$1"
fi
