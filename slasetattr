#!/bin/bash

# use xmlstarlet to update value of an attribute 
# ======================================================================
# cf http://xmlstar.sourceforge.net/doc/UG/xmlstarlet-ug.html#d0e461
# xml ed -u "/xml/table/rec[@id=3]/@id" -v 5 xml/tab-obj.xml
#
# An alternative would be to use sed :
# http://www.unix.com/shell-programming-and-scripting/141609-changing-attribute-value-xml-file-using-shell.html
# sed -e 's/>myAsNode</>xxxxxx</' -e 's/>myAsNode2</>yyyyyy</' file > newfile
# sed -i '/server/,/<\/server/{s/myAsNode\b/xxxxxx/;s/myAsNode2/yyyyyy/}' infile
#
# or combine grep and sed :
# if [[ $(grep -E "Node Name=\"aaaaa\" Role=\"APPSERV" infile | sed 's/.*Role="\(.*\)"\/>/\1/') == "APPSERV,BACKEND,CLM" ]] ...
# ======================================================================

# $1 : fichier sla
# $2 : <balise principale
# $3 : attribut
# $4 : valeur voulue

if [ $# -lt 3 ]
then 
	echo "error in slasetattr : missing document, tag or attribute parameter\(s\). See with -h option first."
	exit
fi

if  [ "$4" = "" ] && [ "$get" = "" ]
then 
	echo "error in slasetattr : missing value parameter\(s\). See with -h option first."
	exit
fi

#  ext=${filename##*\.} donne l'extension si on voulait gÃ©rer $1 "avec ou sans" extension SLA
if [ ! -f $1.sla ]
then
	echo "Error in slasetattr : file \"$1.sla\" doesn't exist"
	exit
fi

# rq : dans slacheckattr, xmlint teste xpath = "//$2/@$3"
if [ ! -f $1.sla.bak ]
then 
	cp $1.sla      $1.sla.first.bak
else
	cp -f $1.sla   $1.sla.last.bak
fi

echo Set //$2/@$3 to $4 in $1.sla
xmlstarlet ed -u "//$2/@$3" -v "$4"   $1.sla  >  .$1.sla.tmp
cp -f   .$1.sla.tmp   $1.sla

